# We let the SQL serivce access the drives we've created.
# As we're not in production, this will do for now, but ideally
# we should create a separate user for SQL, etc.

- name: Set drive/folder permissions for the sql service
  ansible.windows.win_acl:
    user: NT Service\MSSQLSERVER
    path: "{{ item.value + ':\' }}"
    rights: FullControl
    type: allow
    state: present
  loop: "{{ drive_mapping | dict2items }}"        


# Finally, we run the SQL script as passed in from VCF Automation
    
- name: Save the db scipt to a file
  ansible.windows.win_template:
    src: db_script
    dest: "{{ db_script_path }}" 

# For powershell, any env variables (e.g. %USERPROFILE%) need to be converted 
# to the form $env:USERPROFILE
# We e
    
- name: Convert to env var for powershell
  ansible.builtin.set_fact:
    db_script_ps_path_raw: "{{ db_script_path | replace('%', '') | lower"

    
- name: Process string for powershell
  run_once: true
  ansible.windows.win_shell: |
    echo %USERPROFILE%\ansible.cluster_ip
  executable: cmd   
  register: db_script_ps_path
     

- name: Display the converted string
  debug:
    msg: "Converted string: {{ db_script_ps_path.stdout }}" 

- name: Run DB script on first host
  run_once: true
  ansible.windows.win_shell: |
    sqlcmd -S 127.0.0.1 -E -i "{{ db_script_ps_path.stdout }}"
    