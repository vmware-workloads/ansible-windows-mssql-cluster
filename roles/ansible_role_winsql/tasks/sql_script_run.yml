# We let the SQL serivce access the drives we've created.
# As we're not in production, this will do for now, but ideally
# we should create a separate user for SQL, etc.

- name: Set drive/folder permissions for the sql service
  ansible.windows.win_acl:
    user: NT Service\MSSQLSERVER
    path: "{{ item.value + ':\' }}"
    rights: FullControl
    type: allow
    state: present
  loop: "{{ drive_mapping | dict2items }}"        


# Finally, we run the SQL script as passed in from VCF Automation
    
- name: Save the db scipt to a file
  ansible.windows.win_template:
    src: db_script
    dest: "{{ db_script_path }}" 

# Here we convert any env variables (e.g. %USERPROFILE%) into a plain string
# for powershell
    
- name: Process string for powershell
  run_once: true
  ansible.windows.win_shell: |
    echo "{{ db_script_path }}"
  args:
    executable: cmd 
  register: db_script_ps_path_raw
  
- name: strip string
  set_fact:
     db_script_ps_path: "{{ db_script_ps_path_raw.stdout | trim | replace('\"', '')}}" 
     

- name: Display the converted string
  debug:
    msg: "Converted string: {{ db_script_ps_path }}" 
    


- name: Get info for a mssql service
  ansible.windows.win_service_info:
    name: MSSQLSERVER
  register: mssql_service_info 
  
      
- name: Run DB script on first host
  run_once: true
#  ansible.windows.win_command: 
#    cmd: sqlcmd -S {{ computerName }} -E -i "{{ db_script_ps_path }}"
  ansible.windows.win_shell: |
    sqlcmd -S 127.0.0.1 -E -i "{{ db_script_ps_path }}"
#  when: mssql_service_info.services.state == 'started'
  retries: 3
  delay: 3    
    