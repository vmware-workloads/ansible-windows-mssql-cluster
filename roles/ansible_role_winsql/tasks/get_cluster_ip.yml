# Store the extra IP address assigned from VCF Automation for use later to create the cluster
# We 'take' this from the extra network adapter configured 
# And then remove the IP address configured there
# This is 'safe' as VCF Automation still has the IP assigned to this deployment

- name: Check if the IP file exists
  win_stat:
    path: "{{ cluster_ip_path }}"
  register: ip_file_status

- name: Borrow IP address from Adapter 2 from the first host
  run_once: true
  ansible.windows.win_shell: |
    (Get-NetIPAddress -InterfaceAlias 'Ethernet2' | Where AddressFamily -eq "IPv4").IPAddress
  when: not ip_file_status.stat.exists
  register: cluster_ip

 
- name: Save the IP address to file
  win_copy:
    content: "{{ cluster_ip.stdout }}"
    dest: "{{ cluster_ip_path }}"
  when: not ip_file_status.stat.exists

- name: Load saved IP address
  ansible.builtin.slurp:
    src: "{{ cluster_ip_path }}"
  register: cluster_ip_b64
  
- name: Convert slurp from b64
  set_fact:
    cluster_ip: "{{ cluster_ip_b64 | b64decode }}"

    

- name: Show cluster ip
  debug:
    msg: "Picked up cluster IP address {{ cluster_ip }}"

- name: Remove borrowed IP from Adapter 2
  ansible.windows.win_shell: |
    Remove-NetIPAddress -InterfaceAlias 'Ethernet2' -IncludeAllCompartments -Confirm:$false 
  ignore_errors: yes    

- name: Disable Adapter 2
  ansible.windows.win_shell: |
    Disable-NetAdapter -InterfaceAlias 'Ethernet2' -Confirm:$false
  ignore_errors: yes  
    


# Make sure the first adapter is primary, important for the cluster creation later

- name: Ensure Adapter 0 is set to Primary
  ansible.windows.win_shell: |
    Set-NetIPInterface -InterfaceAlias 'Ethernet0' -InterfaceMetric 0